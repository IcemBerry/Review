<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserMapper">
  <resultMap id="BaseResultMap" type="model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_role" jdbcType="INTEGER" property="userRole" />
    <result column="user_lead" jdbcType="INTEGER" property="userLead" />
    <result column="user_login_name" jdbcType="VARCHAR" property="userLoginName" />
    <result column="user_login_password" jdbcType="VARCHAR" property="userLoginPassword" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_college" jdbcType="VARCHAR" property="userCollege" />
    <result column="user_message" jdbcType="VARCHAR" property="userMessage" />
    <result column="user_state" jdbcType="INTEGER" property="userState" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_role, user_lead, user_login_name, user_login_password, user_name, user_college, 
    user_message, user_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_login_name = #{userLoginName,jdbcType=VARCHAR}
  </select>
  <select id="selectUserByTchId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_lead = #{userLead,jdbcType=INTEGER}
  </select>
  <select id="selectUserByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_role = #{userRole,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.User">
    insert into user (user_id, user_role, user_lead, 
      user_login_name, user_login_password, user_name, 
      user_college, user_message, user_state
      )
    values (#{userId,jdbcType=INTEGER}, #{userRole,jdbcType=INTEGER}, #{userLead,jdbcType=INTEGER}, 
      #{userLoginName,jdbcType=VARCHAR}, #{userLoginPassword,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userCollege,jdbcType=VARCHAR}, #{userMessage,jdbcType=VARCHAR}, #{userState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="userLead != null">
        user_lead,
      </if>
      <if test="userLoginName != null">
        user_login_name,
      </if>
      <if test="userLoginPassword != null">
        user_login_password,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userCollege != null">
        user_college,
      </if>
      <if test="userMessage != null">
        user_message,
      </if>
      <if test="userState != null">
        user_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userLead != null">
        #{userLead,jdbcType=INTEGER},
      </if>
      <if test="userLoginName != null">
        #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="userLoginPassword != null">
        #{userLoginPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userCollege != null">
        #{userCollege,jdbcType=VARCHAR},
      </if>
      <if test="userMessage != null">
        #{userMessage,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        #{userState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.User">
    update user
    <set>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userLead != null">
        user_lead = #{userLead,jdbcType=INTEGER},
      </if>
      <if test="userLoginName != null">
        user_login_name = #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="userLoginPassword != null">
        user_login_password = #{userLoginPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userCollege != null">
        user_college = #{userCollege,jdbcType=VARCHAR},
      </if>
      <if test="userMessage != null">
        user_message = #{userMessage,jdbcType=VARCHAR},
      </if>
      <if test="userState != null">
        user_state = #{userState,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.User">
    update user
    set user_role = #{userRole,jdbcType=INTEGER},
      user_lead = #{userLead,jdbcType=INTEGER},
      user_login_name = #{userLoginName,jdbcType=VARCHAR},
      user_login_password = #{userLoginPassword,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_college = #{userCollege,jdbcType=VARCHAR},
      user_message = #{userMessage,jdbcType=VARCHAR},
      user_state = #{userState,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>